// C Program to check the type of a given matrix.


#include <stdio.h>
int main (void)
{
	int a[10][10];
	int i = 0, j = 0, row, col, m, n;
   	 int var1=0, var2=1, var3=1, var4=1;
    
	printf ("Enter the order of the matrix 	(mxn):\n");
	printf ("where m = number of rows; and\n");
	printf ("      n = number of columns\n");
	scanf ("%d %d", &m, &n);
 
	printf ("Enter the elements of the matrix\n");
	for (i = 0; i < m; i++)
	{
	for (j = 0; j < n; j++)
	{
		scanf ("%d", &a[i][j]);
	}
	}
  
  
 //Identity Matrix
	for (i = 0; i < m; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (i == j && a[i][j] != 1)
			{
				var1 = -1;
				break;
			}
			else if (i != j && a[i][j] != 0)
			{
				var1 = -1;
				break;
			}
		}
	}
    


//Upper triangular
   for(row=0; row<m; row++)
   {
       for(col=0; col<n; col++)
       {
           /*
            * If elements below the main diagonal (col<row)
            * is not equal to zero then it is not upper triangular matrix
            */
           if(col<row && a[row][col]!=0)
           {
               var2 = 0;
           }
       }
   }
    
    
    
//Lower triangular
   for(row=0; row<m; row++)
    {
        for(col=0; col<n; col++)
        {
            /*
             * If elements above main diagonal(col>row)
             * is not equal to zero(array[row][col]!=0)
             */
            if(col>row && a[row][col]!=0)
            {
                var3 = 0;
            }
        }
    }
    
    
//Diagonal matrix
   for(row=0 ; row<m ; row++){
   for(col=0 ; col<n ; col++){
   if(m==n)/* true for diagonal elements */
   {
       if(a[row][col]==0)
       var4=1;
   }
   else
   {
       if(a[row][col]!=0)
       var4=0;
   }
   }}



//Conditional Statements

  if (m==1)
  {
      printf("Row Matrix");
  }
  else if(n==1)
  {
      printf("Column Matrix");
  }
	else if (var1 == 0)
	{
		printf ("IDENTITY MATRIX\n");
	}
	else if(var4==1)
	{
	    printf("Diagonal Matrix");
	}
	else if(var2 ==1)
	{
		printf ("Upper Triangular Matrix\n");
	}
	else if(var3 ==1)
	{
	    printf("Lower Triangular Matrix\n");
	}
	else if(m==n)
	{
	    printf("Square Matrix");
	}
    else{
         printf("none");
    }
   	return 0;
}
